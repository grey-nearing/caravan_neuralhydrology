# --- Experiment configurations --------------------------------------------------------------------

# experiment name, used as folder name
experiment_name: us_camels_settings

# files to specify training, validation and test basins (relative to code root or absolute path)
train_basin_file: basin_lists/countries/camels_eastern_us_basins.txt
validation_basin_file: basin_lists/countries/camels_eastern_us_basins.txt
test_basin_file: basin_lists/countries/camels_eastern_us_basins.txt

# training, validation and test time periods (format = 'dd/mm/yyyy')
train_start_date: '01/10/1999'
train_end_date: '30/09/2008'
validation_start_date: '01/10/1980'
validation_end_date: '30/09/1989'
test_start_date: '01/10/1998'
test_end_date: '30/09/1999'

# which GPU (id) to use [in format of cuda:0, cuda:1 etc, or cpu or None]
device: cuda:0

# --- Validation configuration ---------------------------------------------------------------------

# specify after how many epochs to perform validation
validate_every: 1

# specify how many random basins to use for validation
validate_n_random_basins: -1

# specify which metrics to calculate during validation (see neuralhydrology.evaluation.metrics)
# this can either be a list or a dictionary. If a dictionary is used, the inner keys must match the name of the
# target_variable specified below. Using dicts allows for different metrics per target variable.
metrics:
- NSE
- MSE
- RMSE
- KGE
- Alpha-NSE
- Pearson-r
- Beta-NSE
- FHV
- FMS
- FLV
- Peak-Timing

# --- Model configuration --------------------------------------------------------------------------

# base model type [lstm, ealstm, cudalstm, embcudalstm, mtslstm]
# (has to match the if statement in modelzoo/__init__.py)
model: cudalstm

# prediction head [regression]. Define the head specific parameters below
head: regression

# ----> Regression settings <----
output_activation: linear

# ----> General settings <----

# Number of cell states of the LSTM
hidden_size: 256

# Initial bias value of the forget gate
initial_forget_bias: 3

# Dropout applied to the output of the LSTM
output_dropout: 0.4

# --- Training configuration -----------------------------------------------------------------------

# specify optimizer [Adam]
optimizer: Adam

# specify loss [MSE, NSE, RMSE]
loss: NSE

# specify learning rates to use starting at specific epochs (0 is the initial learning rate)
learning_rate:
    0: 1e-3
    10: 5e-4
    25: 1e-4

# Mini-batch size
batch_size: 256

# Number of training epochs
epochs: 50

# If a value, clips the gradients during training to that norm.
clip_gradient_norm: 1

# Defines which time steps are used to calculate the loss. Can't be larger than seq_length.
# If use_frequencies is used, this needs to be a dict mapping each frequency to a predict_last_n-value, else an int.
predict_last_n: 1

# Length of the input sequence
# If use_frequencies is used, this needs to be a dict mapping each frequency to a seq_length, else an int.
seq_length: 365

# Number of parallel workers used in the data pipeline
num_workers: 8

# Log the training loss every n steps
log_interval: 5

# If true, writes logging results into tensorboard file
log_tensorboard: True

# If a value and greater than 0, logs n random basins as figures during validation
log_n_figures: 0

# Save model weights every n epochs
save_weights_every: 1

# --- Data configurations --------------------------------------------------------------------------

# which data set to use [camels_us, camels_gb, global, hourly_camels_us]
dataset: camels_us

# Path to data set root
data_dir: /home/gsnearing_google_com/camels-us-data/basin_dataset_public_v1p2/

# Forcing product [daymet, maurer, maurer_extended, nldas, nldas_extended, nldas_hourly]
# can be either a list of forcings or a single forcing product
forcings:
- daymet

dynamic_inputs:
- prcp(mm/day)
- srad(W/m2)
- tmax(C)
- tmin(C)
- vp(Pa)

# which columns to use as target
target_variables:
- QObs(mm/d)

# clip negative predictions to zero for all variables listed below. Should be a list, even for single variables.
clip_targets_to_zero:
- QObs(mm/d)

# Static basin attributes.
static_attributes:
- elev_mean
- slope_mean
- area_gages2
- frac_forest
- sand_frac
- silt_frac
- clay_frac
- p_mean
- pet_mean
- aridity
- frac_snow
- high_prec_freq
- high_prec_dur
- low_prec_freq
- low_prec_dur

# Path to pickle file(s) containing additional data. Each pickle file must contain a dictionary
# with one key for each basin and the value is a time indexed data frame, where each column is a 
# feature.
# Convention: If a column is used as static input, the value to use for specific sample should be in
# same row (datetime) as the target discharge value.
additional_feature_files:

# columns of the data frame to use as (additional) "static" inputs for each sample. Must be present in
# the above linked additional feature files. These values will be used as static inputs, but they can evolve over time.
# Leave empty to not use any.
evolving_attributes:

# whether to use basin id one hot encoding as (additional) static input
use_basin_id_encoding: False
